#In this project, you’re going to make your own table with some small set of “famous people”, then make more tables about things they do and join those to create nice human readable lists.

#For example, here are types of famous people and the questions your data could answer:

    #Movie stars: What movies are they in? Are they married to each other?
    #Singers: What songs did they write? Where are they from?
    #Authors: What books did they write?
    #Fictional characters: How are they related to other characters? What books do they show up in?
    
    
CREATE TABLE famouspeople (id INTEGER PRIMARY KEY, name TEXT, surname TEXT, profession TEXT, age INTEGER, birth_place TEXT);

INSERT INTO famouspeople VALUES (1, "Alan", "Rickman", "actor", 69, "Hammersmith");
INSERT INTO famouspeople VALUES (2, "Benedict", "Cumberbatch", "actor", 44, "Hammersmith");
INSERT INTO famouspeople VALUES (3, " Leonardo", "DiCaprio", "actor", 46, "Hollywood Heights");
INSERT INTO famouspeople VALUES (4, "Mads", "Mikkelsen", "actor", 55, "Kobenhavn");
INSERT INTO famouspeople VALUES (5, "Javier", "Bardem", "actor", 52, "Las Palmas de gran Canaria");
INSERT INTO famouspeople VALUES (6, "Ludovico", "Einaudi", "musician", 65, "Turin");
INSERT INTO famouspeople VALUES (7, "Max", "Richter", "musician", 55, "Hameln");
INSERT INTO famouspeople VALUES (8, "Leo", "Tolstoy", "author", 82, "Yasnaya Polyana");
INSERT INTO famouspeople VALUES (9, "Fyodor", "Dostoevsky", "author", 59, "Moscow");
INSERT INTO famouspeople VALUES (10, "Joanne", "Rowling", "author", 55, "Scotland");

CREATE TABLE movies (id INTEGER PRIMARY KEY, name TEXT, star_id INTEGER, release_year INTEGER);
INSERT INTO movies VALUES (1, "Titanic", 8, 1997);
INSERT INTO movies VALUES (2, "The Great Gatsby", 8, 2013);
INSERT INTO movies VALUES (3, "The Man in the Iron Mask", 8, 1998);
INSERT INTO movies VALUES (4, "The Search for John Gissing", 1, 2001);
INSERT INTO movies VALUES (5, "Sherlock", 2, 2010);
INSERT INTO movies VALUES (6, "Hannibal", 4, 2013);
INSERT INTO movies VALUES (7, "Pirates of the Caribbean: Dead Men Tell No Tales", 5, 2013);


CREATE TABLE songs (id INTEGER PRIMARY KEY, name TEXT, composer_id INTEGER, release_year INTEGER);
INSERT INTO songs VALUES (1, "In a Time Lapse", 6, 2013);
INSERT INTO songs VALUES (2, "Nightbook", 6, 1997);
INSERT INTO songs VALUES (3, "Sleep and From Sleep", 7, 2015);
INSERT INTO songs VALUES (4, "Voices ", 7, 2020);

CREATE TABLE books (id INTEGER PRIMARY KEY, name TEXT, author_id INTEGER, release_year INTEGER);
INSERT INTO books VALUES (1, "War and Peace", 8, 1869);
INSERT INTO books VALUES (2, "Crime and Punishment ", 9, 1866);
INSERT INTO books VALUES (3, "Harry Potter", 10, 1997);


CREATE TABLE fictional_characters (id INTEGER PRIMARY KEY, book_id INTEGER, character_name TEXT, autor_id INTEGER);
INSERT INTO fictional_characters VALUES (1, 3, "Harry Porter", 10);
INSERT INTO fictional_characters VALUES (2, 1, "Natasha Rostova", 8);
INSERT INTO fictional_characters VALUES (3, 2, "Rodion Raskolnikov", 9);

SELECT famouspeople.name AS Star_Name, famouspeople.surname AS Star_Surname, movies.name AS Title_of_the_movie FROM famouspeople
JOIN movies
ON famouspeople.id = movies.star_id;

SELECT famouspeople.name AS Composer_Name, famouspeople.surname AS Composer_Surname, songs.name AS Title_of_the_song FROM famouspeople
JOIN songs
ON famouspeople.id = songs.composer_id;

SELECT famouspeople.name AS Author_Name, famouspeople.surname AS Athor_Surname, books.name AS Title_of_the_book FROM famouspeople
JOIN books
ON famouspeople.id = books.author_id
GROUP BY Author_Name  HAVING Author_Name != "Joanne";


SELECT fictional_characters.character_name, books.name AS book_name, famouspeople.name AS author_name, famouspeople.surname as author_surname FROM fictional_characters
JOIN books
ON fictional_characters.book_id = books.id
JOIN famouspeople
ON fictional_characters.autor_id= famouspeople.id
